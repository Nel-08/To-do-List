{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Setym\\\\Documents\\\\To do List\\\\src\\\\composants\\\\TodoFilters.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoFilters = ({\n  currentFilter,\n  onFilterChange,\n  counts\n}) => {\n  const filters = [{\n    key: 'all',\n    label: 'Toutes',\n    count: counts.total\n  }, {\n    key: 'active',\n    label: 'En cours',\n    count: counts.active\n  }, {\n    key: 'completed',\n    label: 'Terminées',\n    count: counts.completed\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: filters.map(filter => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${currentFilter === filter.key ? 'active' : ''}`,\n        onClick: () => onFilterChange(filter.key),\n        children: [filter.label, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: [\"(\", filter.count, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, filter.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoFilters;\nexport default TodoFilters;\nvar _c;\n$RefreshReg$(_c, \"TodoFilters\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoFilters","currentFilter","onFilterChange","counts","filters","key","label","count","total","active","completed","className","children","map","filter","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Setym/Documents/To do List/src/composants/TodoFilters.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst TodoFilters = ({ currentFilter, onFilterChange, counts }) => {\r\n  const filters = [\r\n    { key: 'all', label: 'Toutes', count: counts.total },\r\n    { key: 'active', label: 'En cours', count: counts.active },\r\n    { key: 'completed', label: 'Terminées', count: counts.completed }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <div className=\"filter-buttons\">\r\n        {filters.map(filter => (\r\n          <button\r\n            key={filter.key}\r\n            className={`filter-btn ${currentFilter === filter.key ? 'active' : ''}`}\r\n            onClick={() => onFilterChange(filter.key)}\r\n          >\r\n            {filter.label}\r\n            <span className=\"filter-count\">({filter.count})</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoFilters;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAO,CAAC,KAAK;EACjE,MAAMC,OAAO,GAAG,CACd;IAAEC,GAAG,EAAE,KAAK;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAEJ,MAAM,CAACK;EAAM,CAAC,EACpD;IAAEH,GAAG,EAAE,QAAQ;IAAEC,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAEJ,MAAM,CAACM;EAAO,CAAC,EAC1D;IAAEJ,GAAG,EAAE,WAAW;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAEJ,MAAM,CAACO;EAAU,CAAC,CAClE;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BR,OAAO,CAACS,GAAG,CAACC,MAAM,iBACjBf,OAAA;QAEEY,SAAS,EAAE,cAAcV,aAAa,KAAKa,MAAM,CAACT,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;QACxEU,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACY,MAAM,CAACT,GAAG,CAAE;QAAAO,QAAA,GAEzCE,MAAM,CAACR,KAAK,eACbP,OAAA;UAAMY,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,GAAC,EAACE,MAAM,CAACP,KAAK,EAAC,GAAC;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GALjDL,MAAM,CAACT,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIpB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}