{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Setym\\\\Documents\\\\To do List\\\\src\\\\composants\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  onAdd\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim()) {\n      onAdd(input.trim());\n      setInput('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Ajouter une nouvelle t\\xE2che...\",\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"add-btn\",\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","onAdd","_s","input","setInput","handleSubmit","e","preventDefault","trim","handleKeyPress","key","className","onSubmit","children","type","value","onChange","target","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Setym/Documents/To do List/src/composants/TodoForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TodoForm = ({ onAdd }) => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim()) {\r\n      onAdd(input.trim());\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Ajouter une nouvelle tÃ¢che...\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={handleSubmit} className=\"add-btn\">\r\n        Ajouter\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MAChBP,KAAK,CAACE,KAAK,CAACK,IAAI,CAAC,CAAC,CAAC;MACnBJ,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMK,cAAc,GAAIH,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBL,YAAY,CAACC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKY,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAChDd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEZ,KAAM;MACba,QAAQ,EAAGV,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC1CG,UAAU,EAAET,cAAe;MAC3BU,WAAW,EAAC,kCAA+B;MAC3CR,SAAS,EAAC;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAEnB,YAAa;MAACM,SAAS,EAAC,SAAS;MAAAE,QAAA,EAAC;IAEnD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}